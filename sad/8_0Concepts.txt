/**
\page Concepts Concepts

\b Contents
 
The following chapters cover examples of frequent cross-cutting concerns (a.k.a. aspects in some programming languages)
Fill in these chapters if there is NO building block that covers this aspect. If some of the concepts are not relevant for your project mention this fact instead of removing the section.

\b Motivation

Some concept cannot be “factored” into a separate building block of the architecture (e.g. the topic “security”). This section of the template is the location where you can describe all decision for such a cross cutting topic in one central place. Nevertheless, you have to make sure that all your building blocks conform to such decisions.
Form
.. can be varied. Some concepts are plain natural language text with a freely chosen structure, some others may include models/scenarios using notations that are also applied in architecture views.



The section consist from the following pages:
- \subpage DomainModels
- \subpage GenericStructures
- \subpage Persistency 
- \subpage UserInterface
- \subpage Ergonomics
- \subpage FlowOfControl
- \subpage TransactionProcession
- \subpage SessionHandling
- \subpage Security
- \subpage Safety
- \subpage CommunicationAndIntegration
- \subpage Distribution
- \subpage PlausibilityandValidityChecks
- \subpage ErrorHandling
- \subpage SystemManagementandAdministration
- \subpage LoggingTracing
- \subpage BusinessRules
- \subpage Configurability
- \subpage ParallelizationandThreading
- \subpage Internationalization
- \subpage Migration
- \subpage Testability
- \subpage ScalingClustering
- \subpage HighAvailability
- \subpage CodeGeneration
- \subpage Build-Management

*/
